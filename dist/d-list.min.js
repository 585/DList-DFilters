!function(){angular.module("d.Filters",[]),angular.module("d.Actions",[]),angular.module("d.List",[]),angular.module("d.Keyboard",[]),angular.module("d.Helpers",[])}(),angular.module("d.Filters").run(["$templateCache",function(e){e.put("action-box.tpl.html",'<div class="btn-group">\n	<button class="btn btn-default btn-{{size}} dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false" bs-drop-down>\n		<span class="glyphicon glyphicon-{{icon}}" aria-hidden="true"></span> <span ng-bind="label"></span> <span class="caret"></span>\n	</button>\n	<ul class="dropdown-menu" role="menu" ng-transclude></ul>\n</div>\n'),e.put("action.add-item.tpl.html",'<li>\n    <a href="" ng-click="savm.selectAll()"><i class="glyphicon glyphicon-plus"></i> Add item</a>\n</li>'),e.put("action.delete-items.tpl.html",'<li>\n    <a href="" ng-click="vm.deleteItems()"><i class="glyphicon glyphicon-remove"></i> Delete</a>\n</li>'),e.put("action.select-all.tpl.html",'<li>\n    <a href="" ng-click="savm.selectAll()">Select All</a>\n</li>'),e.put("action.select-inverse.tpl.html",'<li>\n    <a href="" ng-click="sivm.selectInverse()">Select Inverse</a>\n</li>'),e.put("action.select-none.tpl.html",'<li>\n    <a href="" ng-click="snvm.selectNone()">Select None</a>\n</li>'),e.put("filters.tpl.html",'<form role="form" class="row d-filters">\n    <div ng-repeat="field in $filters.$fields()" ng-switch="field.type">\n        <div ng-switch-when="text" class="form-group col-xs-{{field.size[0]}} col-sm-{{field.size[1]}} col-md-{{field.size[2]}} col-lg-{{field.size[3]}} d-filters__text-field">\n            <label for="{{field.ngModel}}">{{field.label}}</label>\n            <input type="text" name="{{field.ngModel}}" class="form-control" ng-model="$filters.$model[field.ngModel]"\n                ng-model-options="{ updateOn: \'default blur\', debounce: {\'default\': 500, \'blur\': 0} }" />\n        </div>\n        <div ng-switch-when="select" class="form-group col-xs-{{field.size[0]}} col-sm-{{field.size[1]}} col-md-{{field.size[2]}} col-lg-{{field.size[3]}} d-filters__select-box">\n            <label for="{{field.ngModel}}">{{field.label}}</label>\n            <select name="{{field.ngModel}}" class="form-control" ng-model="$filters.$model[field.ngModel]" ng-options="option.key as option.value for option in field.ngOptions">\n            </select>\n        </div>\n        <div ng-switch-when="checkbox" class="checkbox col-xs-{{field.size[0]}} col-sm-{{field.size[1]}} col-md-{{field.size[2]}} col-lg-{{field.size[3]}} d-filters__checkbox">\n            <label>\n                <input type="checkbox" ng-model="$filters.$model[field.ngModel]"/>{{field.label}}\n            </label>\n        </div>\n        <div ng-switch-when="selectize" class="col-xs-{{field.size[0]}} col-sm-{{field.size[1]}} col-md-{{field.size[2]}} col-lg-{{field.size[3]}} d-filters__selectize">\n            <label for="{{field.ngModel}}">{{field.label}}</label>\n            <selectize ng-model="$filters.$model[field.ngModel]" config="field.config"></selectize>\n        </div>\n        <div ng-switch-when="datePicker" class="col-xs-{{field.size[0]}} col-sm-{{field.size[1]}} col-md-{{field.size[2]}} col-lg-{{field.size[3]}} d-filters__date-picker">\n            <label for="{{field.ngModel}}">{{field.label}}</label>\n            <input type="text" class="form-control" model="$filters.$model[field.ngModel]" date-picker editable/>\n        </div>\n    </div>\n    <button ng-if="!$filters.autoSubmit" class="btn btn-primary d-filters__submit" ng-click="$filters.submit()">Submit</button>\n</form>\n'),e.put("edit-input.tpl.html",'<div class="form-group">\n    <select ng-if="vm.setup.type === \'select\'" ng-model="vm.editValue" ng-options="option for option in vm.selectDataOptions" class="form-control">\n    </select>\n    <input ng-if="vm.setup.type !== \'select\'" type="text" class="form-control" ng-model="vm.editValue">\n</div>'),e.put("edit-mode-button.tpl.html",'<span class="pull-right">\n    <button class="btn btn-{{size}} btn-primary" ng-if="!$parent.$list.$edit" type="button" ng-click="vm.changeEditMode()">\n        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> \n        <span>Edit</span>\n    </button>\n    \n    <button class="btn btn-{{size}} btn-success" ng-if="$parent.$list.$edit" type="button" ng-click="vm.saveEditData()">\n        <span class="glyphicon glyphicon-floppy-saved" aria-hidden="true"></span> \n        <span>Save</span>\n    </button>\n    \n    <button class="btn btn-{{size}} btn-default" ng-if="$parent.$list.$edit" type="button" ng-click="vm.cancelEditData()">\n        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> \n        <span>Cancel</span>\n    </button>\n</span>'),e.put("list.tpl.html",'<div class="d-list">\n    <div ng-transclude class="d-list__multi-actions"></div>\n    <table ng-if="!responsiveMode" class="d-list-table">\n        <thead class="d-list-table__headers" ng-if="$list.$setup.enable.header">\n            <tr>\n                <th class="d-list-table__header" ng-if="$list.$setup.enable.checkboxes"></th>\n                <th class="d-list-table__header" ng-repeat="header in $list.$headers">\n                    <a href="" ng-if="$list.headerIsSortable(header)" ng-click="$list.sortBy(header)" class="d-list-table__header-sortable">\n                        {{$list.getHeaderLabel(header) | capitalize}}\n                        <i ng-if="$list.$sort.by === header" class="glyphicon" ng-class="{\'glyphicon-chevron-down\': $list.$sort.order === \'desc\', \'glyphicon-chevron-up\': $list.$sort.order === \'asc\'}" style="font-size: 10px; margin: 4px 0 0 4px"></i>\n                    </a>\n                    <span ng-if="!$list.headerIsSortable(header)">\n                        {{$list.getHeaderLabel(header) | capitalize}}\n                    </span>\n                </th>\n            </tr>\n        </thead>\n        <tfoot class="d-list-table__footer" ng-if="$list.$setup.enable.footer">\n        </tfoot>\n        <tbody class="d-list-table__body">\n            <tr ng-repeat="element in $list.$elements" class="d-list-table__body-row">\n                <td ng-if="$list.$setup.enable.checkboxes" class="d-list-table__body-cell d-list-table__body-cell-checkbox">\n                    <input type="checkbox" ng-model="element.$checked" />\n                </td>\n                <td ng-hide="$list.$edit" ng-repeat="header in $list.$headers" class="d-list-table__body-cell">\n                    <div ng-if="!$list.$setup.templates[header]">{{element[header]}}</div>\n                    <div ng-if="$list.$setup.templates[header]">\n                        <item data-template="$list.$setup.templates[header]" data-model="element[header]"></item>\n                    </div>\n                </td>\n                <td ng-show="$list.$edit" ng-repeat="header in $list.$headers" class="d-list-table__body-cell--edit">\n                    <div class="form-group">\n                        <edit-input data-value="element[header]" data-setup="$list.$setup.edit[header]"></edit-input>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <table ng-if="responsiveMode" class="d-list-table-small" ng-repeat="element in $list.$elements">\n        <tbody>\n            <tr ng-repeat="header in $list.$headers" class="d-list-table-small__row">\n                <td class="d-list-table-small__header">\n                    <a href="" ng-if="$list.headerIsSortable(header)" ng-click="$list.sortBy(header)" class="d-list-table-small__header-sortable">\n                        {{$list.getHeaderLabel(header) | capitalize}}\n                        <i ng-if="$list.$sort.by === header" class="glyphicon" ng-class="{\'glyphicon-chevron-down\': $list.$sort.order === \'desc\', \'glyphicon-chevron-up\': $list.$sort.order === \'asc\'}" style="font-size: 10px; margin: 4px 0 0 4px"></i>\n                    </a>\n                    <span ng-if="!$list.headerIsSortable(header)">\n                        {{$list.getHeaderLabel(header) | capitalize}}\n                    </span>\n                </td>\n                <td ng-hide="$list.$edit" class="d-list-table-small__body-cell">\n                    <div ng-if="!$list.$setup.templates[header]">{{element[header]}}</div>\n                    <div ng-if="$list.$setup.templates[header]">\n                        <item data-template="$list.$setup.templates[header]" data-model="element[header]"></item>\n                    </div>\n                </td>\n\n                <td ng-show="$list.$edit" class="d-list-table-small__body-cell--edit">\n                    <div class="form-group">\n                        <edit-input data-value="element[header]" data-setup="$list.$setup.edit[header]"></edit-input>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <section ng-if="$list.$setup.enable.pagination" class="d-list-pagination">\n        <div class="input-group d-list-pagination__page-links">\n            <span ng-bind="$list.$setup.i18n.pagination.prev" ng-click="$list.$pagination.pageDown()"\n                ng-disabled="$list.$pagination.data.page === 1" class="input-group-addon btn btn-default d-list-pagination__prev"></span>\n            <input type="text" class="form-control" ng-blur="$list.$pagination.ensureValidPage()"\n                ng-model="$list.$pagination.data.page" class="d-list-pagination__number"/>\n            <span ng-bind="$list.$setup.i18n.pagination.next" ng-click="$list.$pagination.pageUp()"\n                ng-disabled="$list.$pagination.data.page === $list.$pagination.totalPages()"\n                class="input-group-addon btn btn-default d-list-pagination__next"></span>\n        </div>\n        <div class="d-list-pagination-summary">\n            <div class="d-list-pagination-summary__items-number">Showing items: {{$list.$pagination.fromItem()}} - {{$list.$pagination.toItem()}} of {{$list.$pagination.data.total}}</div>\n            <div class="d-list-pagination-summary__selected">Selected: {{$list.selected()}}</div>\n            <div class="d-list-pagination-summary__total-pages">Total pages: {{$list.$pagination.totalPages()}}</div>\n            <br/>\n            <div ng-if="$list.$pagination.data.pageSizeOptions" class="d-list-pagination-summary__items-number-select btn-group">\n                <button ng-repeat="pageSizeOption in $list.$pagination.data.pageSizeOptions"\n                    ng-class="{active: pageSizeOption === $list.$pagination.data.pageSize}"\n                    ng-click="$list.$pagination.setPageSize(pageSizeOption)"\n                    type="button" class="btn btn-default">{{pageSizeOption}}</button>\n            </div>\n        </div>\n    </section>\n</div>\n')}]),function(){function e(){function e(e,t){t.on("click",function(){$(".dropdown-menu").not(t.next()).hide(),$(t).next().toggle()})}return{restrict:"A",link:e}}angular.module("bsDropDown",[]).directive("bsDropDown",e)}(),function(){angular.module("d.Helpers").filter("capitalize",function(){return function(e){return e?e.replace(/([^\W_]+[^\s-]*) */g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()}):""}})}(),function(){function e(){return{altPressed:!1}}angular.module("d.Keyboard").service("keyboardService",e)}(),function(){function e(){function e(e){var t=this;e.$watch("$parent.$parent.$list.$elements",function(e){t.elements=e})}return e.$inject=["$scope"],{transclude:!0,templateUrl:"action-box.tpl.html",replace:!0,controller:e,scope:{label:"@",size:"@",icon:"@"},controllerAs:"vm"}}angular.module("d.Actions").directive("actionBox",e)}(),function(){function e(){function e(){}return e.$inject=["$scope"],{restrict:"E",controller:e,templateUrl:"action.add-item.tpl.html",replace:!0}}angular.module("d.List").directive("actionAddItem",e)}(),function(){function e(){function e(e){function t(){var e=[];angular.forEach(n.elements,function(t,n){t.$checked&&e.push(n)}),e.length>0&&angular.forEach(e,function(e){n.elements.splice(e,1)})}var n=this;n.deleteItems=t,e.$watch("$parent.vm.elements",function(e){n.elements=e})}return e.$inject=["$scope"],{restrict:"E",controller:e,controllerAs:"vm",templateUrl:"action.delete-items.tpl.html",replace:!0}}angular.module("d.List").directive("actionDelete",e)}(),function(){function e(e){function t(t){function n(){angular.forEach(i.elements,function(t){e.select(t)})}var i=this;i.selectAll=n,t.$watch("$parent.vm.elements",function(e){i.elements=e})}return t.$inject=["$scope"],{templateUrl:"action.select-all.tpl.html",replace:!0,controller:t,controllerAs:"savm"}}angular.module("d.Actions").directive("actionSelectAll",e),e.$inject=["dCheckboxesService"]}(),function(){function e(e){function t(t){function n(){angular.forEach(i.elements,function(t){e.invert(t)})}var i=this;i.selectInverse=n,t.$watch("$parent.vm.elements",function(e){i.elements=e})}return t.$inject=["$scope"],{templateUrl:"action.select-inverse.tpl.html",replace:!0,controller:t,controllerAs:"sivm"}}angular.module("d.Actions").directive("actionSelectInverse",e),e.$inject=["dCheckboxesService"]}(),function(){function e(e){function t(t){function n(){angular.forEach(i.elements,function(t){e.unselect(t)})}var i=this;i.selectNone=n,t.$watch("$parent.vm.elements",function(e){i.elements=e})}return t.$inject=["$scope"],{templateUrl:"action.select-none.tpl.html",replace:!0,controller:t,controllerAs:"snvm"}}angular.module("d.Actions").directive("actionSelectNone",e),e.$inject=["dCheckboxesService"]}(),function(){function e(){function e(e){function t(){n.$setup()&&n.$setup().filters&&n.$setup().filters.onChange&&n.$setup().filters.onChange(n.$model)}var n=this;n.$model={},n.submit=t,n.autoSubmit&&e.$watch("$filters.$model",t,!0)}return e.$inject=["$scope"],{templateUrl:"filters.tpl.html",replace:!0,bindToController:!0,scope:{listName:"@",$setup:"&setup",$fields:"&fields",autoSubmit:"@"},controller:e,controllerAs:"$filters"}}angular.module("d.Filters").directive("dFilters",e)}(),function(){function e(){function e(e){e.$checked=!0}function t(e){e.$checked=!1}function n(e){e.$checked=!e.$checked}function i(e){return e.$checked}return{select:e,unselect:t,invert:n,isChecked:i}}angular.module("d.Helpers").service("dCheckboxesService",e)}(),function(){function e(e){function t(e,t,n){e.size=n.size}function n(t){function n(){t.$parent.$list.$edit=!t.$parent.$list.$edit}function i(){e.$broadcast("dList.cancelEditData"),n()}function l(){e.$broadcast("dList.saveEditData"),n()}var a=this;a.changeEditMode=n,a.saveEditData=l,a.cancelEditData=i}return n.$inject=["$scope"],{templateUrl:"edit-mode-button.tpl.html",replace:!0,link:t,controller:n,controllerAs:"vm"}}angular.module("d.List").directive("editModeButton",e),e.$inject=["$rootScope"]}(),function(){function e(e,t){function n(e){function n(){i.setup.dataUrl?t.get(i.setup.dataUrl).then(function(){i.selectDataOptions=["Newton","Barry","Night"]},function(){console.log("CAUTION: Error while loading external select options from "+i.setup.dataUrl)}):i.setup.data&&(i.selectDataOptions=i.setup.data)}var i=this;i.selectDataOptions=[],i.editValue=e.value,i.setup=e.setup();var l=e.$watch("setup",function(e){e()&&(n(),l())});e.$on("dList.saveEditData",function(){e.value=i.editValue}),e.$on("dList.cancelEditData",function(){i.editValue=e.value})}function i(t,n){n.bind("keyup",function(t){18===t.keyCode&&(e.altPressed=!1)}),n.bind("keydown",function(t){if(18===t.keyCode&&(e.altPressed=!0),e.altPressed){var i,l,a;switch(t.keyCode){case 37:i=angular.element(n.parent().parent()[0].previousElementSibling);break;case 38:var i=angular.element(angular.element(n.parent().parent().parent()[0].previousElementSibling).find("td")[n.parent().parent()[0].cellIndex]);break;case 39:var i=n.parent().parent().next();break;case 40:var i=angular.element(n.parent().parent().parent().next().find("td")[n.parent().parent()[0].cellIndex])}l=i.find("select")[0],a=i.find("input")[0],l&&l.focus(),a&&a.focus()}})}return n.$inject=["$scope"],{templateUrl:"edit-input.tpl.html",replace:!0,controller:n,controllerAs:"vm",link:i,scope:{value:"=",setup:"&"}}}angular.module("d.List").directive("editInput",e),e.$inject=["keyboardService","$http"]}(),function(){function e(e){return{link:function(t,n){n.html(t.template()),e(n.contents())(t)},scope:{template:"&",value:"&model"},controller:["$scope",function(e){var t=this;t.value=e.value()}],controllerAs:"$item"}}angular.module("d.List").directive("item",e),e.$inject=["$compile"]}(),function(){function e(e,t,n,i,l,a){function s(e){function n(e){return!g.$setup.columns||!g.$setup.columns.sortables||g.$setup.columns.sortables.indexOf(e)>-1}function s(e){return g.$headerLabels&&g.$headerLabels[e]?g.$headerLabels[e]:e}function o(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&"$"!==n[0]&&(g.$setup.columns?(g.$setup.columns.include?g.$setup.columns.include&&g.$setup.columns.include.indexOf(n)>-1&&t.push(n):t.push(n),g.$setup.columns.exclude&&g.$setup.columns.exclude.indexOf(n)>-1&&t.indexOf(n)>-1&&t.splice(t.indexOf(n),1)):t.push(n));return t}function r(){var e=0;return angular.forEach(g.$elements,function(t){l.isChecked(t)&&e++}),e}function c(n){if(e.url()){var l=angular.extend({},n,g.$sort,g.$pagination.data);i.getData(g.$setup.data.onSuccess,g.$setup.data.onError,l).then(function(e){f=t("orderBy")(e,g.$sort.by,"desc"===g.$sort.order),d(),g.$pagination.data.total=f.length,u()})}else f=t("orderBy")(e.elements(),g.$sort.by,"desc"===g.$sort.order),d(),g.$pagination.data.total=f.length,u()}function d(){angular.forEach(f,function(e){angular.extend(e,{$checked:!1})})}function u(){g.$elements=f.slice((g.$pagination.data.page-1)*g.$pagination.data.pageSize,g.$pagination.data.pageSize*g.$pagination.data.page)}function p(e){g.$sort.by=e,g.$sort.order=g.$sort.order&&"asc"===g.$sort.order?"desc":"asc",g.$sort.order=g.$sort.order,c()}var g=this,f=[];i.setUrl(e.url()),g.$name=e.name,g.selected=r,g.$edit=!1,g.sortBy=p,g.$setup=angular.extend({},a.getSetup(),e.setup()?e.setup():{}),g.$headerLabels=g.$setup.columns&&g.$setup.columns.labels?g.$setup.columns.labels:{},g.$sort=g.$setup&&g.$setup.defaults?g.$setup.defaults.sort:{},g.$pagination={data:{pageSize:g.$setup.defaults.pagination.pageSize,page:g.$setup.defaults.pagination.page,pageSizeOptions:g.$setup.defaults.pagination.pageSizeOptions,total:null},pageUp:function(){this.data.page!==this.totalPages()&&(this.data.page++,c())},pageDown:function(){1!==this.data.page&&(this.data.page--,c())},ensureValidPage:function(){this.data.page<1?this.data.page=1:this.data.page>this.totalPages()&&(this.data.page=this.totalPages()),c()},totalPages:function(){return Math.round(this.data.total/this.data.pageSize)},fromItem:function(){return(this.data.page-1)*this.data.pageSize===0?1:(this.data.page-1)*this.data.pageSize},toItem:function(){return this.data.page*this.data.pageSize>this.data.total?this.data.total:this.data.page*this.data.pageSize},setPageSize:function(e){this.data.pageSize=e,this.data.page=1,c()}},g.headerIsSortable=n,g.getHeaderLabel=s,e.$watch(angular.bind(g,function(){return g.$elements}),function(e){e&&e[0]&&(g.$headers=o(e[0]))}),e.$on(g.$name+"Reload",function(e,t){c(t)}),c()}return s.$inject=["$scope"],{templateUrl:"list.tpl.html",replace:!0,transclude:!0,scope:{elements:"&",setup:"&",url:"&",name:"@",responsiveMode:"=responsive"},controller:s,controllerAs:"$list"}}angular.module("d.List").directive("dList",e),e.$inject=["$http","$filter","$compile","dListService","dCheckboxesService","dListSetup"]}(),function(){function e(){function e(){var e=this;return{getSetup:function(){return e.setup}}}this.setup={enable:{header:!0,footer:!1,sorting:!0,pagination:!0,filters:!0,checkboxes:!0},defaults:{sort:{order:"asc",by:"surname"},pagination:{pageSize:10,page:1,pageSizeOptions:[10,15,20,50]}},i18n:{locale:"en_US",pagination:{next:"Next",prev:"Previous",start:"Start",end:"End"}},data:{onSuccess:function(e){return e.value},onError:function(e){return e}}},this.$get=e}angular.module("d.List").provider("dListSetup",e)}(),function(){function e(e){function t(e){l=e}function n(){return l}function i(t,n,i){return e.get(l,{method:"GET",params:i}).then(function(e){return t(e.data)},function(e){return n(e.data)})}var l;return{setUrl:t,getUrl:n,getData:i}}angular.module("d.List").service("dListService",e),e.$inject=["$http"]}();